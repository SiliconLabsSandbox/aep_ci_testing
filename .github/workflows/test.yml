name: Trigger Internal Runners

on:
  workflow_dispatch:

jobs:
  trigger-internal:
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Workflow
        id: trigger
        run: |
          echo "Repository: $REPOSITORY_NAME"
          echo "Branch: $BRANCH_NAME"
          echo "Owner: $OWNER_NAME"
          response=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            https://api.github.com/repos/SiliconLabsInternal/testing_ci_aep/actions/workflows/test.yml/dispatches \
            -d '{"ref":"main","inputs":{"repository": "${{ github.repository }}" ,"ref":"${{ github.ref }}"}}')
          echo "Triggered workflow: $response"
          if echo "$response" | grep -q '"message": "Not Found"'; then
            echo "Error: Workflow or repository not found. Please check the repository name, workflow file name, and branch name."
            exit 1
          fi

      - name: Wait for Check-Time Workflow to Complete
        id: wait
        env:
          TIMEOUT: 1800
        run: |
          sleep 3
          run_id=$(curl -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            https://api.github.com/repos/SiliconLabsInternal/testing_ci_aep/actions/runs \
            | jq '.workflow_runs[] | select(.name=="Be triggered") | .id' | head -n 1)
          echo "Run ID: $run_id"
          
          start_time=$(date +%s)
          while true; do
            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))
            if [ $elapsed_time -ge $TIMEOUT ]; then
              echo "Error: Workflow did not complete within $((TIMEOUT / 60)) minutes."
              exit 1
            fi
            
            ##########################################
            status=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              https://api.github.com/repos/SiliconLabsInternal/testing_ci_aep/actions/runs/$run_id \
              | jq -r '.status')
            
            conclusion=$(curl -s \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              https://api.github.com/repos/SiliconLabsInternal/testing_ci_aep/actions/runs/$run_id \
              | jq -r '.conclusion')
            
            echo "Status: $status, Conclusion: $conclusion"
            if [[ "$status" == "completed" ]]; then
              if [[ "$conclusion" == "success" ]]; then
                echo "Workflow completed successfully."
                exit 0
              else
                echo "Workflow failed."
                exit 1
              fi
            fi
            sleep 3
          done
